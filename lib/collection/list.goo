;;; list.gooli -- list

(use primitive
     runtime/collection
     runtime/sequence)

(def head (x|<lst>))
(def tail (x|<lst>))
(def lst (&rest elts) elts)
(def list (&rest elts) elts)
(def lst* (&rest elts) elts)

(def pair (h|<any> t|<lst>) (%pair h t))

(def as (type|(t= <list>) x|<string>) '())
(def as (type|(t= <string>) x|<list>) "")

(def as (type|(t= <vector>) x|<list>) #())
(def as (type|(t= <list>) x|<vector>) '())

(export head tail lst list lst* pair)
